我正在开发一个基于 Electron 的文件查看器和编辑应用，需要实现以下功能和技术要求：

1. 基础架构
- 使用 Electron + Vite 构建
- 主进程和渲染进程分离架构
- 使用 contextBridge 进行进程间通信
- 无边框窗口设计

2. 文件处理系统
- 实现可扩展的文件处理器架构
- 处理器目录结构：
  ```
  src/
    handlers/            # 主进程处理器代码
      base.js            # 基础处理器类
      handlerManager.js  # 处理器管理器
    renderer/
      handlers/          # 渲染进程处理器代码
        [type]/          # 具体文件类型处理器
          main.js        # 处理器主进程逻辑
          index.html     # 处理器视图
          config.json    # 处理器配置
          styles/        # 样式文件
          scripts/       # 渲染进程脚本
  ```

3. 文件处理器功能
- 自动扫描和加载处理器
- 通过配置文件注册文件类型
- 支持处理器独立的界面和样式
- 处理器间共享基础类和通用功能
- 根据文件类型，自动选择对应的处理器并打开界面

4. 窗口管理
- 支持主窗口和文件查看窗口
- 自定义窗口标题栏
- 窗口最大化/最小化/关闭控制
- 拖放文件支持
- 空启动时显示拖放功能，拖放文件后根据文件类型自动挂载不同处理器打开文件

5. 文件关联
- 支持作为默认程序打开文件
- 处理命令行参数启动
- 支持多实例启动
- 支持多种类型文件的打开



6. 开发工具
- 处理器生成脚本
- 开发环境热重载
- 日志系统

7. 构建与发布
- 使用 electron-builder 打包
- 支持 Windows 安装程序
- 自动更新支持

8. 安全性要求
- 进程隔离
- contextIsolation 启用
- 文件协议安全处理

9. 扩展性
- 支持插件化扩展，在/src/renderer/handlers/ 目录下创建插件文件夹，引入插件文件夹下的index.html
- 插件系统架构

10. 文件类型支持以及功能描述
- 通用功能描述：
    - 自定义无边框窗口
    - 操作按钮在页面下方，半透明，美观大方
    - 响应式布局
    - 界面简约、美观大方
    - 文件保存功能、字体大小调整
    - 搜索和替换功能
- 按文件类型功能描述：
    - Image：支持查看常见图片格式、支持图片的旋转、放大、缩小功能，可以使用滚轮和按钮放大缩小。
    - Video：支持常见视频格式的播放、自定义播放控制界面、进度条控制、音量控制、时间显示、
    - Code：支持常见代码语言的编辑。    
    - PDF：支持常见PDF文件的查看
    - Markdown：实时预览 Markdown 内容、语法高亮、行号显示、光标位置显示、Tab键支持、支持导出 PDF
    - JSON：行号显示、光标位置显示、Tab键支持，语法高亮功能、一键美化、一键格式化、自动补全功能、JSON Schema 验证
    - XML：行号显示、光标位置显示、Tab键支持，语法高亮功能、一键美化、一键格式化、自动补全功能、XML 树形视图、XML Schema 验证
    - YAML：行号显示、光标位置显示、Tab键支持，语法高亮功能、一键美化、一键格式化、自动补全功能、YAML Schema 验证
    - TXT：行号显示、光标位置显示、Tab键支持

请帮我实现这个应用，需要注意：
1. 代码结构清晰，便于维护
2. 处理器系统易于扩展
3. 性能优化
4. 错误处理完善
5. 用户体验友好

你可以从以下任何部分开始：
- 项目基础架构搭建
- 处理器系统实现
- 具体文件类型处理器开发
- 界面设计与实现
- 构建与发布配置

限制：
1. 不能修改已有文件，只能添加新文件，如果逻辑不符合要求，请提出

